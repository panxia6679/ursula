---
- name: install cinder-data required packages
  package: name={{ item }}
  with_items:
    - cryptsetup
    - lvm2
    - tgt
    - nbd-client
    - open-iscsi
    - qemu-utils
  when: os == 'ubuntu'
  register: result
  until: result|succeeded
  retries: 5

- name: install cinder-data required packages
  package: name={{ item }}
  when: os == 'rhel'
  with_items:
    - cryptsetup
    - lvm2
    - scsi-target-utils
    - nbd
    - iscsi-initiator-utils
    - qemu-kvm-tools
  register: result
  until: result|succeeded
  retries: 5

- name: iscsi target framework conf dir
  file: dest=/etc/tgt/conf.d state=directory

- name: tgt config files
  template: src={{ item.value.src }} dest={{ item.value.dest }} mode=0644
  with_dict:
    targets:
      src: etc/tgt/targets.conf
      dest: /etc/tgt/targets.conf
    cinder_tgt:
      src: etc/tgt/conf.d/cinder_tgt.conf
      dest: /etc/tgt/conf.d/cinder_tgt.conf
  notify: restart tgt service

- name: ensure tgt service is running
  service: name="{{ tgt_service }}" state=started

- include: volume_group.yml
  when: cinder.create_vg|bool and ( cinder.fixed_key is not defined or (cinder.fixed_key is defined and "compute" not in group_names) )

- name: iscsi start
  service: name="{{ iscsi_service }}" state=started

- name: enable cinder encryption
  template: src=etc/cinder/cinder.encryption.conf dest=/etc/cinder/cinder.encryption.conf mode=0640
            owner=root group=cinder
  notify: restart cinder services
  when: cinder.fixed_key is defined

- name: disable cinder encryption
  file: dest=/etc/cinder/cinder.encryption.conf state=absent
  notify: restart cinder services
  when: cinder.fixed_key is not defined

- name: install cinder-volume service
  upstart_service: name=cinder-volume user=cinder
                   cmd=/usr/local/bin/cinder-volume
                   config_dirs=/etc/cinder
  when: os == 'ubuntu'

- name: install cinder backup service
  upstart_service: name=cinder-backup
                   user=cinder
                   cmd=/usr/local/bin/cinder-backup
                   config_dirs=/etc/cinder
  when: os == 'ubuntu' and swift.enabled|default("false")|bool

- name: install cinder-volume service
  systemd_service: name=cinder-volume user=cinder
                   cmd=/usr/local/bin/cinder-volume
                   config_dirs=/etc/cinder
  when: os == 'rhel' and openstack_install_method == 'package'

- name: install cinder backup service
  systemd_service: name=cinder-backup
                   user=cinder
                   cmd=/usr/local/bin/cinder-backup
                   config_dirs=/etc/cinder
  when: os == 'rhel' and swift.enabled|default("false")|bool and openstack_install_method == 'package'


- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify:
    - restart cinder services
    - restart cinder backup service
  when: (code_has_changed | default('False') | bool and upgrade | default('False') | bool) or
        (ceph.enabled|default('False')|bool and upgrade_ceph|bool)

- meta: flush_handlers

- name: start cinder-volume
  service:
    name: cinder-volume
    state: started
  delegate_to: "{{ item }}"
  run_once: True
  with_items: "{{ play_hosts }}"
  when: openstack_install_method != 'distro'
  
- name: start cinder-volume (rhel osp)
  service:
    name: openstack-cinder-volume
    state: started
  delegate_to: "{{ item }}"
  run_once: True
  with_items: "{{ play_hosts }}"
  when: openstack_install_method == 'distro'

- name: start cinder backup
  service:
    name: cinder-backup
    state: started
  delegate_to: "{{ item }}"
  run_once: True
  when: swift.enabled|default("false")|bool and openstack_install_method != 'distro'
  with_items: "{{ play_hosts }}"

- name: start cinder backup
  service:
    name: openstack-cinder-backup
    state: started
  delegate_to: "{{ item }}"
  run_once: True
  when: swift.enabled|default("false")|bool and openstack_install_method == 'distro'
  with_items: "{{ play_hosts }}"

- include: monitoring.yml
  when: monitoring.enabled|default('True')|bool
  tags:
    - monitoring
    - common
