---
- include: ssh.yml
  when: nova.enable_ssh|bool
  tags:
    - ssh

- include: libvirt.yml
  when: nova.compute_driver == "libvirt.LibvirtDriver"
  tags:
    - libvirt
    - libvirtd

- include: docker.yml
  when: nova.compute_driver == "novadocker.virt.docker.DockerDriver"

- name: install nova data plan requirements
  package: name=sysfsutils
  register: result
  until: result|succeeded
  retries: 5

- name: set group membership for nova state_path
  file:
    dest: "{{ nova.state_path }}"
    state: directory
    owner: nova
    group: "{{ (os == 'rhel' ) | ternary('qemu', 'nova') }}"
    mode: 0755


- name: nova instances directory
  file:
    dest: "{{ nova.state_path }}/instances"
    state: directory
    owner: nova
    group: "{{ (os == 'rhel' ) | ternary('qemu', 'nova') }}"
    mode: 0755

- name: nbd module - ubuntu
  lineinfile: dest=/etc/modules line="nbd"
  when: os == 'ubuntu'

- name: probe nbd - ubuntu
  modprobe: name=nbd state=present
  when: os == 'ubuntu'

- name: install nbd package - rhel
  package:
    name: nbd
  when: os == 'rhel'

- name: check if SMT is enabled
  command: "ppc64_cpu --smt"
  failed_when: False
  changed_when: False
  register: smt
  when: ansible_architecture == "ppc64le"

- name: disable SMT for ppc64le
  command: "ppc64_cpu --smt=off"
  when: ansible_architecture == "ppc64le" and not smt.stdout|search("SMT is off")

- name: ensure that SMT is off at runtime before we startup libvirt (ppc64)
  lineinfile: dest=/etc/default/libvirt-bin line="ppc64_cpu --smt=off"
  when: ansible_architecture == "ppc64le"

- name: enable cinder encryption
  template: src=etc/nova/nova.cinder_encryption.conf dest=/etc/nova/nova.cinder_encryption.conf mode=0640
            owner=root group=nova
  notify: restart nova compute
  when: cinder.fixed_key is defined

- name: disable  cinder encryption
  file: dest=/etc/nova/nova.cinder_encryption.conf state=absent
  notify: restart nova compute
  when: cinder.fixed_key is not defined

- name: install nova-compute service
  upstart_service: name=nova-compute user=nova cmd=/usr/local/bin/nova-compute
                   config_dirs=/etc/nova
  when: os == 'ubuntu'

- name: install nova-compute service (rhel source)
  systemd_service: name=nova-compute user=nova cmd=/usr/local/bin/nova-compute
                   config_dirs=/etc/nova
  when: os == 'rhel' and openstack_install_method == 'source'

- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart nova compute
  when: (project_package.changed or git_result.changed) and
        upgrade | default('False') | bool

- meta: flush_handlers

- name: start nova-compute
  when: openstack_install_method != 'distro'
  service: name=nova-compute state=started

- name: start nova-compute (rhel osp)
  when: openstack_install_method == 'distro'
  service: name=openstack-nova-compute state=started

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool

- include: serverspec.yml
  tags:
    - serverspec
  when: serverspec.enabled|default('False')|bool
