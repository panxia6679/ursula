---
- name: install neutron-data-network packages
  apt: pkg={{ item }}
  with_items:
    - dnsmasq
    - dnsmasq-utils
    - iputils-arping
    - ucarp
    - radvd
    - resolvconf
  register: result
  until: result|succeeded
  retries: 5

- name: install packages for l3ha
  apt: pkg=keepalived
  when: neutron.l3ha.enabled|bool
  register: result
  until: result|succeeded
  retries: 5

- name: remove conntrackd
  apt: name=conntrackd purge=yes state=absent
  register: result
  until: result|succeeded
  retries: 5

- include: dnsmasq.yml

- include: igmp-router.yml
  when: neutron.plugin == 'ml2' and 'vxlan' in neutron.tunnel_types and not neutron.l2_population

- name: assert kernel supports vxlan
  command: modinfo -F version vxlan
  changed_when: false
  when: "'vxlan' in neutron.tunnel_types"

- name: assert iproute2 supports vxlan
  command: ip link add type vxlan help
  register: iproute_out
  changed_when: false
  failed_when: iproute_out.rc == 255
  when: "'vxlan' in neutron.tunnel_types"

- name: install neutron-data-network services
  upstart_service:
    name: "{{ item.key }}"
    user: neutron
    cmd: "/usr/local/bin/{{ item.key }}"
    pidfile: "{{ item.value.pidfile|default(omit) }}"
    start_on: "starting neutron-linuxbridge-agent"
    stop_on: "stopping neutron-linuxbridge-agent"
    config_dirs: /etc/neutron
    config_files: /etc/neutron/neutron.conf,{{ item.value.config_files }}
    envs: "{{ neutron.service.envs }}"
  with_dict:
    neutron-dhcp-agent:
      config_files: /etc/neutron/dhcp_agent.ini
    neutron-l3-agent:
      config_files: /etc/neutron/l3_agent.ini
      pidfile: /var/run/enutron-l3-agent.pid
    neutron-metadata-agent:
      config_files: /etc/neutron/metadata_agent.ini


- block:
  - include: lbaas-haproxy-cleanup.yml
    when: neutron.lbaas.f5.enabled | bool

  - include: lbaas-f5-cleanup.yml
    when: neutron.lbaas.f5.enabled | bool == false

  - include: lbaas-f5.yml
    when: neutron.lbaas.f5.enabled | bool

  - include: lbaas-haproxy.yml
    when: neutron.lbaas.f5.enabled | bool == false
  when: (neutron.lbaas.enabled == "smart" and groups['controller'][0] not in groups['compute']) or neutron.lbaas.enabled|bool

- block:
  - include: lbaas-haproxy-cleanup.yml
  - include: lbaas-f5-cleanup.yml
  when: neutron.lbaas.enabled|bool == false


- name: kill namespaced neutron processes on upgrade
  command: pkill -f {{ item }}
  failed_when: False
  when: code_has_changed | default('False') | bool and
        upgrade | default('False') | bool
  with_items:
    - neutron-keepalived-state-change
    - neutron-ns-metadata-proxy

- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart neutron services
  when: code_has_changed | default('False') | bool and
        upgrade | default('False') | bool

- meta: flush_handlers

- name: start neutron-data-network services
  service: name={{ item }} state=started
  with_items:
    - neutron-l3-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent

- include: ipchanged.yml

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool
