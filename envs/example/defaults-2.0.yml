---
stack_env: example
ursula_env_path: "{{ lookup('env','URSULA_ENV') }}"
country_code: US

openstack_install_method: 'source'


basevenv: "/opt/openstack/base"
basevenv_lib_dir: "{{ basevenv }}/lib/python2.7/site-packages"

primary_interface: 'ansible_eth0'
primary_ip: "{{ hostvars[inventory_hostname][primary_interface]['ipv4']['address'] }}"

secrets:
  db_password:      asdf
  mongodb_password: asdf
  service_password: asdfA#8!
  rabbit_password:  asdf
  admin_password:   asdfA#8!
  stack_domain_admin_password: ydgurtH5erghithge57!
  metadata_proxy_shared_secret: asdf
  horizon_secret_key:           asdf
  glance_sync:      ADQ64XUQLUWH75M634RVBLP55RKPGGOWG
  monitor_password: asdfA#8!
  telemetry_secret: asdf
  cloud_admin_password: asdfA#8!

fqdn: openstack.example.com
swift_fqdn: "{{ fqdn }}"
floating_ip: "{{ hostvars[groups['controller'][0]][primary_interface]['ipv4']['address'] }}"
undercloud_floating_ip: "{{ hostvars[groups['controller'][0]][primary_interface]['ipv4']['address'] }}"

etc_hosts:
  - name: "{{ fqdn }}"
    ip: "{{ floating_ip }}"

state_path_base: /var/lib

rabbitmq:
  port: 5672
  user: openstack
  cluster: false

mongodb:
  port: 27017

memcached:
  memory: 64
  port: 11211
  user: nobody
  max_connections: 1024

swift:
  enabled: False
  logging:
    debug: False

endpoints:
  main:     "{{ fqdn }}"
  db:       "{{ undercloud_floating_ip }}"
  rabbit:   "{{ undercloud_floating_ip }}"
  magnum: "{{ fqdn }}"
  identity_uri: https://{{ fqdn }}:35357
  auth_uri: https://{{ fqdn }}:5000/v2.0

mysql:
  root_password: asdf
xtradb:
  galera_version: 3.x
  client_version: 5.6
  server_version: 5.6
  sst_auth_user: sst_admin
  sst_auth_password: asdf

monitoring:
  enabled: true
  keepalive:
    handler: default
  scan_for_log_errors: true
  openstack:
    user:
      username: monitor
      password: "{{ secrets.monitor_password }}"
      tenant: admin
      role: admin

openstack:
  pypi_mirror: https://pypi-mirror.openstack.blueboxgrid.com/root/pypi
  easy_install_mirror: https://pypi-mirror.openstack.blueboxgrid.com/root/pypi/+simple
  pip_trusted: pypi-mirror.openstack.blueboxgrid.com
  gem_sources:
    - https://rubygems.org
  git_mirror:  https://github.com/openstack
  git_update: yes
  ubuntu_mirror: https://apt-mirror.openstack.blueboxgrid.com/trusty/ubuntu

apt_repos:
  docker:
    repo: https://apt-mirror.openstack.blueboxgrid.com/docker/ubuntu
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/docker.key
  bbg_ubuntu:
    repo: https://apt-mirror.openstack.blueboxgrid.com/bbg_ubuntu/ubuntu
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/bbg_ubuntu.key
  blueboxcloud_giftwrap:
    repo: https://apt-mirror.openstack.blueboxgrid.com/blueboxcloud_giftwrap/blueboxcloud/giftwrap/ubuntu
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/blueboxcloud_giftwrap.key
  hwraid:
    repo: https://apt-mirror.openstack.blueboxgrid.com/hwraid/ubuntu
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/hwraid.key
  sensu:
    repo: https://apt-mirror.openstack.blueboxgrid.com/sensu/apt
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/sensu.key
  haproxy:
    repo: https://apt-mirror.openstack.blueboxgrid.com/haproxy/vbernat/haproxy-1.5/ubuntu
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/haproxy.key
  bbg_openstack_ppa:
    repo: https://apt-mirror.openstack.blueboxgrid.com/bbg_openstack_ppa/blueboxgroup/openstack/ubuntu
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/bbg_openstack_ppa.key
  percona:
    repo: https://apt-mirror.openstack.blueboxgrid.com/percona/apt
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/percona.key
  rabbitmq:
    repo: https://apt-mirror.openstack.blueboxgrid.com/rabbitmq/debian
    key_url: https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
  cloud_archive:
    repo: https://apt-mirror.openstack.blueboxgrid.com/cloud_archive/ubuntu
  erlang:
    repo: https://apt-mirror.openstack.blueboxgrid.com/erlang/debian
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/erlang.key
  ceph:
    repo: https://apt-mirror.openstack.blueboxgrid.com/packagecloud.io/blueboxcloud/ceph-bbg/ubuntu
    key_url: https://apt-mirror.openstack.blueboxgrid.com/keys/ceph_bbg.key
  collectd:
    repo: http://ppa.launchpad.net/raravena80/collectd5/ubuntu
    key_url: "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xE97C3D97792BD34E"
  chef:
    repo: https://packages.chef.io/stable-apt
    key_url: https://downloads.chef.io/packages-chef-io-public.key

client:
  self_signed_cert: true

nova:
  libvirt_type: qemu
  api_workers: 1
  conductor_workers: 1
  metadata_api_workers: 1
  reserved_host_disk_mb: 50
  enable_ssh: true
  preallocate_images: none
  logging:
    debug: True
    verbose: True
  novnc_method: file
  novnc_url: https://file-mirror.openstack.blueboxgrid.com/novnc/novnc-0.5.1.tar.gz
  flavors:
    - flavorid: 1
      name: m1.tiny
      ram: 512
      disk: 10
      ephemeral: 0
      vcpus: 1
    - flavorid: 2
      name: m1.small
      ram: 2048
      disk: 20
      ephemeral: 0
      vcpus: 1
    - flavorid: 3
      name: m1.medium
      ram: 4096
      disk: 40
      ephemeral: 0
      vcpus: 2
    - flavorid: 4
      name: m1.large
      ram: 8192
      disk: 80
      ephemeral: 0
      vcpus: 4
    - flavorid: 5
      name: m1.xlarge
      ram: 16384
      disk: 160
      ephemeral: 0
      vcpus: 8

ceph:
  enabled: false
  #disks:
  #  - sdb
  #  - sdc
  #  - sdd
  #bcache_ssd_device: sdg

cinder:
  enabled: True
  enabled_backends: [] # rbd_volumes for Ceph
  backends: []
    # Ceph
    #- name: rbd_volumes
    #  volume_driver: cinder.volume.drivers.rbd.RBDDriver
  volume_type: file
  volume_file: /opt/stack/cinder-volumes
  volume_file_size: 5G
  create_vg: True
  #fixed_key: 6a5c55db5e250f234b6af7807dafda77433dddcf372b6d04801a45f578a35aa7
  logging:
    debug: True
    verbose: True
  volume_types: []
  encrypted_volume_types:
    - volume_type: encrypted-aes-512
      cipher: aes-xts-plain64
      key_size: 512
      provider: nova.volume.encryptors.luks.LuksEncryptor
      control_location: front-end

neutron:
  advertise_mtu: true
  path_mtu: 1400
  global_physnet_mtu: 1500
  plugin: ml2
  bridge_mappings: ''
  network_vlan_ranges: ''
  tenant_network_type: vxlan
  tunnel_types:
    - vxlan
  lbaas:
    enabled: False
  logging:
    debug: True
    verbose: True
  networks:
    - name: internal
      shared: true
      external: false
      network_type: vxlan
      segmentation_id: 256
      provider_physical_network: ~
    - name: external
      shared: false
      external: true
      network_type: local
      segmentation_id: ~
      provider_physical_network: ~
  subnets:
    - name: internal_v4
      network_name: internal
      ip_version: 4
      cidr: 172.16.255.0/24
      pool_start: 172.16.255.2
      pool_end: 172.16.255.254
      enable_dhcp: "true"
      gateway_ip: 172.16.255.1
      dns_nameservers: '8.8.8.8,8.8.4.4'
    - name: internal_v6
      network_name: internal
      ip_version: 6
      cidr: 2db8:1::/64
      enable_dhcp: "true"
      gateway_ip: 2db8:1::1
      ipv6_address_mode: dhcpv6-stateless
      ipv6_ra_mode: dhcpv6-stateless
      dns_nameservers: '2001:4860:4860::8888,2001:4860:4860::8844'
    - name: external
      network_name: external
      ip_version: 4
      cidr: 192.168.255.0/24
      enable_dhcp: "false"
      gateway_ip: 192.168.255.1
      dns_nameservers: '8.8.8.8,8.8.4.4'
  routers:
    - name: default
      tenant_name: admin
  router_interfaces:
    - router_name: default
      subnet_name: internal_v4
      tenant_name: admin
    - router_name: default
      subnet_name: internal_v6
      tenant_name: admin
  service:
    envs:
      - "REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt"
  tenant_nameservers:
    - 8.8.4.4
    - 8.8.8.8

glance:
  api_workers: 1
  registry_workers: 1
  logging:
    debug: True
    verbose: True
  images:
    - name: cirros
      url: https://file-mirror.openstack.blueboxgrid.com/cloud-images/cirros-0.3.3-x86_64-disk.img
      filename: cirros-0.3.3-x86_64-disk.img

keystone:
  token_expiration_in_seconds: 86400
  logging:
    debug: True
    verbose: True
  tenants:
    - admin
    - service
    - demo
  users:
    - name: admin
      password: "{{ secrets.admin_password }}"
      tenant: admin
    - name: demo
      password: demopass$S5
      tenant: demo
    - name: nova
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: glance
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: neutron
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: cinder
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: heat
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: ceilometer
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: ironic
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: magnum
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: "{{ monitoring.openstack.user.username }}"
      password: "{{ monitoring.openstack.user.password }}"
      tenant: "{{ monitoring.openstack.user.tenant }}"
    - name: swift
      password: "{{ secrets.service_password }}"
      tenant: service
    - name: cloud_admin
      password: "{{ secrets.cloud_admin_password }}"
      tenant: demo
    - name: aodh
      password: "{{ secrets.service_password }}"
      tenant: service
  user_roles:
    - user: admin
      tenant: admin
      role: admin
    - user: admin
      tenant: admin
      role: heat_stack_owner
    - user: admin
      tenant: service
      role: admin
    - user: nova
      tenant: service
      role: service
    - user: glance
      tenant: service
      role: service
    - user: neutron
      tenant: service
      role: service
    - user: neutron
      tenant: service
      role: admin
    - user: cinder
      tenant: service
      role: service
    - user: heat
      tenant: service
      role: service
    - user: ceilometer
      tenant: service
      role: service
    - user: ceilometer
      tenant: service
      role: admin
    - user: magnum
      tenant: service
      role: service
    - user: ironic
      tenant: service
      role: service
    - user: "{{ monitoring.openstack.user.username }}"
      tenant: "{{ monitoring.openstack.user.tenant }}"
      role: "{{ monitoring.openstack.user.role }}"
    - user: swift
      tenant: service
      role: admin
    - user: cloud_admin
      tenant: demo
      role: cloud_admin
    - user: cloud_admin
      tenant: demo
      role: heat_stack_owner
    - user: aodh
      tenant: service
      role: admin
  services:
    - name: keystone
      type: identity
      description: 'Identity Service'
      public_url: "{{ endpoints.keystone.url.public }}/{{ endpoints.keystone.version }}"
      internal_url: "{{ endpoints.keystone.url.internal }}/{{ endpoints.keystone.version }}"
      admin_url: "{{ endpoints.keystone.url.admin }}/{{ endpoints.keystone.version }}"
    - name: keystonev3
      type: identityv3
      description: 'Identity Service v3'
      public_url: "{{ endpoints.keystone.url.public }}/{{ endpoints.keystonev3.version }}"
      internal_url: "{{ endpoints.keystone.url.internal }}/{{ endpoints.keystonev3.version }}"
      admin_url: "{{ endpoints.keystone.url.admin }}/{{ endpoints.keystonev3.version }}"
    - name: nova
      type: compute
      description: 'Compute Service'
      public_url: "{{ endpoints.nova.url.public }}/{{ endpoints.nova.url.path }}"
      internal_url: "{{ endpoints.nova.url.internal }}/{{ endpoints.nova.url.path }}"
      admin_url: "{{ endpoints.nova.url.admin }}/{{ endpoints.nova.url.path }}"
    - name: glance
      type: image
      description: 'Image Service'
      public_url: "{{ endpoints.glance.url.public }}"
      internal_url: "{{ endpoints.glance.url.internal }}"
      admin_url: "{{ endpoints.glance.url.admin }}"
    - name: neutron
      type: network
      description: 'Network Service'
      public_url: "{{ endpoints.neutron.url.public }}"
      internal_url: "{{ endpoints.neutron.url.internal }}"
      admin_url: "{{ endpoints.neutron.url.admin }}"
    - name: cinder
      type: volume
      description: 'Volume Service'
      public_url: "{{ endpoints.cinder.url.public }}/{{ endpoints.cinder.url.path }}"
      internal_url: "{{ endpoints.cinder.url.internal }}/{{ endpoints.cinder.url.path }}"
      admin_url: "{{ endpoints.cinder.url.admin }}/{{ endpoints.cinder.url.path }}"
    - name: cinderv2
      type: volumev2
      description: 'Volume Service v2'
      public_url: "{{ endpoints.cinderv2.url.public }}/{{ endpoints.cinderv2.url.path }}"
      internal_url: "{{ endpoints.cinderv2.url.internal }}/{{ endpoints.cinderv2.url.path }}"
      admin_url: "{{ endpoints.cinderv2.url.admin }}/{{ endpoints.cinderv2.url.path }}"
    - name: heat
      type: orchestration
      description: 'Heat Orchestration API'
      public_url: "{{ endpoints.heat.url.public }}/{{ endpoints.heat.url.path }}"
      internal_url: "{{ endpoints.heat.url.internal }}/{{ endpoints.heat.url.path }}"
      admin_url: "{{ endpoints.heat.url.admin }}/{{ endpoints.heat.url.path }}"
    - name: heat-cfn
      type: cloudformation
      description: 'Heat CloudFormation API'
      public_url: "{{ endpoints.heat_cfn.url.public }}/{{ endpoints.heat_cfn.version }}"
      internal_url: "{{ endpoints.heat_cfn.url.internal }}/{{ endpoints.heat_cfn.version }}"
      admin_url: "{{ endpoints.heat_cfn.url.admin }}/{{ endpoints.heat_cfn.version }}"
    - name: ceilometer
      type: metering
      description: 'Telemetry Service'
      public_url: "{{ endpoints.ceilometer.url.public }}"
      internal_url: "{{ endpoints.ceilometer.url.internal }}"
      admin_url: "{{ endpoints.ceilometer.url.admin }}"
    - name: ironic
      type: baremetal
      description: 'Ironic bare metal provisioning service'
      public_url: "{{ endpoints.ironic.url.public }}"
      internal_url: "{{ endpoints.ironic.url.internal }}"
      admin_url: "{{ endpoints.ironic.url.admin }}"
    - name: swift
      type: object-store
      description: 'Object Storage Service'
      public_url: "{{ endpoints.swift.url.public }}/{{ endpoints.swift.url.path }}"
      internal_url: "{{ endpoints.swift.url.internal }}/{{ endpoints.swift.url.path }}"
      admin_url: "{{ endpoints.swift.url.admin }}/{{ endpoints.swift.url.path }}"
    - name: magnum
      type: container
      description: 'Magnum Container Service'
      public_url: https://{{ endpoints.main }}:9511
      internal_url: https://{{ endpoints.main }}:9511
      admin_url: https://{{ endpoints.main }}:9511
    - name: aodh
      type: alarming
      description: 'aodh alarming service'
      public_url: "{{ endpoints.aodh.url.public }}"
      internal_url: "{{ endpoints.aodh.url.internal }}"
      admin_url: "{{ endpoints.aodh.url.admin }}"
  federation:
    enabled: False

ssl:
  cafile: "{{ (os == 'rhel' ) | ternary('/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt', '/etc/ssl/certs/ca-certificates.crt') }}"
  crt: |
    -----BEGIN CERTIFICATE-----
    MIIDJzCCAg+gAwIBAgIJALHoTH80v+pAMA0GCSqGSIb3DQEBCwUAMBIxEDAOBgNV
    BAMMB3Rlc3QtY2EwHhcNMTYxMjE0MjI0NjExWhcNMTcwMjEyMjI0NjExWjAgMR4w
    HAYDVQQDDBVvcGVuc3RhY2suZXhhbXBsZS5jb20wggEiMA0GCSqGSIb3DQEBAQUA
    A4IBDwAwggEKAoIBAQC/U/FcD0iNVxGFxcgDlgHCgK1qNdE7CmAmbkwfwczg8M33
    EheSZULERKT+2TYm187hdpu/O1h1X2iVt5LAQ05ciWu0ff4vJOTwJcHKzj5CnNEQ
    nlNHr3Plxl+RL/IiQxMTqRju1lrhl3yyJSiK6HLgQVEgOGjJLkgtvn9aSOj2XOi8
    HYIlMN264XPgsAtvdGcJ4KomB7jM5qh46y5LnB2EVgCpI6QpOIN99aHBNmVqCSZc
    XWwxybMpIm523QqLFkoqgUhO6DyxOSzFzG2bcl0zBRyLiA5H40qI0bivKEPte1QJ
    Fvq6tJa8F0B7Eon5V9JVhlquCt8wtOG4g6nxD0jfAgMBAAGjcjBwMAkGA1UdEwQC
    MAAwCwYDVR0PBAQDAgXgMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATA3
    BgNVHREEMDAughVvcGVuc3RhY2suZXhhbXBsZS5jb22CFW9wZW5zdGFjay5leGFt
    cGxlLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEApkLUjX+RS3C5H3e/RHg72zQvckUT
    3BA58T2ECC7WebtiCQhOw2/GJ+0qDqEzhV5yKAd2K0YJs+Y8LosaE/aedr/HD7rw
    zCAVBWqM7R0eQN6RpTOvZ8YnjJOJjtagDS1F57Tsf/AgMBMq/aPL2MdPDmdUns0B
    XVgModdIkj+UVTM/ZlzmUJqj5UDt5AclRM5B8a3gYMqdeJgtwwMKCfAg45h7rMjT
    6VBn5OvAXmyzyvIqJ+cR49SMGtpFRSphOVzCOqfwcq7Q65JzioVmVctz8FoON3yB
    cetJ28K7CX+OQL8mnmZhmcB9lE0r8/LNXIFQKwUOEC5zs3V5fyVA8B8w6A==
    -----END CERTIFICATE-----
  key: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEogIBAAKCAQEAv1PxXA9IjVcRhcXIA5YBwoCtajXROwpgJm5MH8HM4PDN9xIX
    kmVCxESk/tk2JtfO4XabvztYdV9olbeSwENOXIlrtH3+LyTk8CXBys4+QpzREJ5T
    R69z5cZfkS/yIkMTE6kY7tZa4Zd8siUoiuhy4EFRIDhoyS5ILb5/Wkjo9lzovB2C
    JTDduuFz4LALb3RnCeCqJge4zOaoeOsuS5wdhFYAqSOkKTiDffWhwTZlagkmXF1s
    McmzKSJudt0KixZKKoFITug8sTksxcxtm3JdMwUci4gOR+NKiNG4ryhD7XtUCRb6
    urSWvBdAexKJ+VfSVYZargrfMLThuIOp8Q9I3wIDAQABAoIBABcRqgJtnVPdcbFt
    fYZhKekn1sD9qDK0N4+qsOcLWQauQkdOGSV/rCM6G6LW0d6xGrK4uGLAZxQP4u5a
    aglglCw4LZJftqw8iJYkF0+6umsRuWuFi4kTMKg92PwKielzqPMv6l+x3Ndiiph4
    PoExMdi0R3HZG1lWiUFqvLRIIj7CE0AMftBswTRxN/PmG57DkH113tThlsiOuvbY
    gDc5UQHb7CnIl85BsHLLjubr0+lO9/588pwuCJoLDbp2CMAmDayrySTRhvWVPZnL
    EQKh22HcJsnH75U/ZBjvP6CJaXrddvvYnx7KlnrdFE5XYBYz+P6cDzxtlMQQumw6
    4A6vrtECgYEA/IXiZiAx3yAdxOrpkLRYs+2AVNYhvo0Fg8DhqepPYCb/Jxh7OZdb
    4Wg4qE7w6pFIKrALpM2YA3xtm7St2DTzwZJbqUGw3gs6YCn3e0rHi9dKPnKOErDZ
    TBKcqh5SAocvx1unxKE2UbxDojZmj+5t8RYvIAuMM+ox+WYt6kN/7esCgYEAwfZa
    P01idwRt4j2QlizY/H0qnBt3c0eKdwVJ4z87wZpYRkxn1It2sJVAg/W214eahKom
    lzaO9sA4bT4T4RRHRv/mMbmcU1ad1Fm4ed+S+SadPF/m9Dre7WkTR/re31uS09fj
    GJKaJ4k0H3xXBK61z8yOkWCz5AvTGzfr/v7ib90CgYAjue1l9XgY0Tpk+bdBucIy
    8o8NcZ4kj18QXOGQYI4KVHoU1enZJAjjwxMA/OooxZUoNO/wyQWQuLHpLY7K3/L8
    l/BP6fNT9tKzeDyDPPkuV68xVpOzIUIc+SUhDFkd8nJYCieaMhS1S6Vl9bxc8Kat
    TS4tonSbg66+Ui58zj/zMQKBgGkNrUOr/jDITVvETJOKJtxaTsHOfpwJm41rZ+GV
    ViA+IKGysGoGP3rU2+SdKTMDV0WTguNTwYsUAXvpq4q1GQXzhBJanbjlqQZisfAQ
    j+Iyb+dLaiPN3wBncPIDhsMjLhtfSrj8blILlheXmOoIVqD+AhnrboONhAGyADhU
    hQBhAoGAe6or3/F7e+Y2tosUvEV93HPkzHcchMafgnKuWqGdsSkDL/OXK46OePuG
    SS9KMjbKf7qD8/+yP5DDSO02By2wBsPMJcu+lniDhBh/043iUdwF0Ts5utffnA7Z
    1wCsPkgvo5UDi2QlTWmRsMoEguqfkCAwLsNDLNr8dS/g0vtr7fI=
    -----END RSA PRIVATE KEY-----
  cacrt: |
    -----BEGIN CERTIFICATE-----
    MIIC9zCCAd+gAwIBAgIJAKKmJqfVztR1MA0GCSqGSIb3DQEBCwUAMBIxEDAOBgNV
    BAMMB3Rlc3QtY2EwHhcNMTYxMjE0MjI0NjEwWhcNMTcwMjEyMjI0NjEwWjASMRAw
    DgYDVQQDDAd0ZXN0LWNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
    0sKsAlTtfkfoNDmLT2xTfXrOzSHT+c3PwN3Tc637eUJrEiTsztfxzOh9kZLIKvTZ
    9mst0PIEtdckoPm7scTb0Zxdq29n1goGIimUc+qvdW56Ji8QKg8IqOk9CuwmmMdM
    wC9gBPplVXHJiBhCAn4+c8yeACBnl7M+Q5+NcDAtE85NEcDHOHn7BiZPA78+O4bd
    HxE6nOJ0cR7iTUGuzZLtrs6WViOtr9DtHn02BBqtA4iej4h6zlUgYG0krhsLIhbo
    38nb7ziMdgasNGg708TK1IBdqo33t0r+mIyeLB+LGucCIuG8KtSKk0vld25AfxSa
    9N1Si/wmFqKLTIPp24yeewIDAQABo1AwTjAdBgNVHQ4EFgQUuYGGv4mTzF9cyziP
    ESW60/fynsYwHwYDVR0jBBgwFoAUuYGGv4mTzF9cyziPESW60/fynsYwDAYDVR0T
    BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAQo6/GOOzDTJy5Uu6C9pY21ptfn3u
    E3kGpFZ+1E8pHMLVp7bY8KU3j6IUNkhcwmCUZy1yNvs7SaO4I6RVipBOSYW0slAr
    wYTcbktIoULCcEj2S6MdBGPjjaJWOX1GhlBpifqjwa4O1vymyiB9WyW0JsgXtav1
    f5yEjmZmXN6vRgIj7svMyAmMAaZshKaBQM0iLCIZQPhzwDDyceWjdUTfFGqR1yW3
    NVKxts9j4VyfPxPu/lulZod5NY55C3VzVC1YlMhCgXQ72/MGo8rMZ1VPUQZE5UAq
    0O6JHpTBcXZmcXG+vSh8rrKaUDeahFIk84WM3oT9cflOvRbBwjTkw4oY8A==
    -----END CERTIFICATE-----

openstack_setup:
  add_users: True
  add_images: True
  add_networks: True
  add_cinder: True

percona:
  replication: True

common:
  ipmi:
    enabled: False
    state: probe
  system_tools:
    mcelog: False
  ursula_monitoring:
    method: tar # git|tar
    tar_url: https://file-mirror.openstack.blueboxgrid.com/ursula-monitoring/master.tar.gz
    tar_version: master
  ntpd:
    servers: []
    #  - servertime.service.softlayer.com

heat:
  enabled: True
  logging:
    debug: True
    verbose: True

ceilometer:
  enabled: False
  logging:
    debug: True
    verbose: True

aodh:
  enabled: False
  logging:
    debug: True
    verbose: True

ironic:
  enabled: False
  logging:
    debug: True
    verbose: True

docker:
  enabled: False

novadocker:
  enabled: False

haproxy:
  enabled: True

logging:
  enabled: False

keystonev3:
  enabled: True

cinderv2:
  enabled: True

magnum:
  enabled: False
  debug: True

serverspec:
  enabled: False

inspec:
  enabled: False
